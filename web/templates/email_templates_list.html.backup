{{template "base.html" .}}

{{define "content"}}
<div class="rc-container rc-mt-lg">
    <!-- Page Header -->
    <div class="rc-flex rc-flex-between rc-mb-xl">
        <div>
            <h1 class="rc-heading-2">
                <i class="bi bi-envelope-gear"></i> E-Mail Settings
            </h1>
            <p class="rc-text">Manage email templates and SMTP configuration</p>
        </div>
        <div class="rc-flex rc-gap-md">
            <a href="/settings/email-templates/new" class="rc-btn rc-btn-primary">
                <i class="bi bi-plus-circle"></i> New Template
            </a>
        </div>
    </div>

    <!-- SMTP Configuration Section -->
    <div class="rc-card rc-mb-xl">
        <div class="rc-card-header">
            <h3 class="rc-card-title">
                <i class="bi bi-server"></i> SMTP Configuration
            </h3>
        </div>
        <div class="rc-card-body">
            <form id="smtpConfigForm">
                <div class="rc-grid rc-grid-2 rc-gap-lg rc-mb-lg">
                    <div class="rc-form-group">
                        <label class="rc-label" for="smtp_host">SMTP Host</label>
                        <input type="text" class="rc-input" id="smtp_host" name="smtp_host" placeholder="smtp.gmail.com">
                    </div>
                    <div class="rc-form-group">
                        <label class="rc-label" for="smtp_port">SMTP Port</label>
                        <input type="number" class="rc-input" id="smtp_port" name="smtp_port" placeholder="587">
                    </div>
                </div>
                <div class="rc-grid rc-grid-2 rc-gap-lg rc-mb-lg">
                    <div class="rc-form-group">
                        <label class="rc-label" for="smtp_username">Username</label>
                        <input type="text" class="rc-input" id="smtp_username" name="smtp_username" placeholder="your-email@gmail.com">
                    </div>
                    <div class="rc-form-group">
                        <label class="rc-label" for="smtp_password">Password</label>
                        <input type="password" class="rc-input" id="smtp_password" name="smtp_password" placeholder="Your app password">
                    </div>
                </div>
                <div class="rc-flex rc-gap-md">
                    <button type="button" class="rc-btn rc-btn-primary" onclick="saveSMTPConfig()">
                        <i class="bi bi-check-lg"></i> Save SMTP Settings
                    </button>
                    <button type="button" class="rc-btn rc-btn-outline" onclick="testSMTPConnection()">
                        <i class="bi bi-wifi"></i> Test Connection
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Email Templates Section -->
    <div class="rc-card">
        <div class="rc-card-header">
            <div class="rc-flex rc-flex-between rc-flex-center">
                <h3 class="rc-card-title">
                    <i class="bi bi-envelope"></i> E-Mail Templates
                </h3>
                <a href="/settings/email-templates/new" class="rc-btn rc-btn-primary rc-btn-sm">
                    <i class="bi bi-plus-circle"></i> New Template
                </a>
            </div>
        </div>
                
        <div class="rc-card-body">
            {{if .templates}}
            <div class="rc-table-responsive">
                <table class="rc-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Subject</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th class="rc-text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{range .templates}}
                        <tr>
                            <td>
                                <div class="rc-flex rc-flex-center rc-gap-sm">
                                    {{if .IsDefault}}
                                    <span class="rc-badge rc-badge-success">Default</span>
                                    {{end}}
                                    <strong>{{.Name}}</strong>
                                </div>
                                {{if .Description}}
                                <div class="rc-text-sm rc-text-muted">{{.Description}}</div>
                                {{end}}
                            </td>
                            <td>
                                {{if eq .TemplateType "invoice"}}
                                <span class="rc-badge rc-badge-primary">Invoice</span>
                                {{else if eq .TemplateType "reminder"}}
                                <span class="rc-badge rc-badge-warning">Reminder</span>
                                {{else if eq .TemplateType "payment_confirmation"}}
                                <span class="rc-badge rc-badge-success">Payment Confirmation</span>
                                {{else}}
                                <span class="rc-badge rc-badge-secondary">General</span>
                                {{end}}
                            </td>
                            <td>
                                <div class="rc-text-truncate" style="max-width: 300px;" title="{{.Subject}}">
                                    {{.Subject}}
                                </div>
                            </td>
                            <td>
                                {{if .IsActive}}
                                <span class="rc-badge rc-badge-success">Active</span>
                                {{else}}
                                <span class="rc-badge rc-badge-secondary">Inactive</span>
                                {{end}}
                            </td>
                            <td>
                                <span class="rc-text-sm rc-text-muted">{{.CreatedAt.Format "02.01.2006 15:04"}}</span>
                            </td>
                            <td class="rc-text-center">
                                <div class="rc-flex rc-gap-xs rc-justify-center">
                                    <a href="/settings/email-templates/{{.TemplateID}}/preview" 
                                       class="rc-btn rc-btn-ghost rc-btn-sm" title="Preview">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    <a href="/settings/email-templates/{{.TemplateID}}/edit" 
                                       class="rc-btn rc-btn-ghost rc-btn-sm" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    {{if not .IsDefault}}
                                    <button type="button" class="rc-btn rc-btn-ghost rc-btn-sm" 
                                            onclick="setAsDefault({{.TemplateID}}, '{{.TemplateType}}')" 
                                            title="Set as Default">
                                        <i class="bi bi-star"></i>
                                    </button>
                                    <button type="button" class="rc-btn rc-btn-ghost rc-btn-sm rc-text-error" 
                                            onclick="deleteTemplate({{.TemplateID}}, '{{.Name}}')" 
                                            title="Delete">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                    {{end}}
                                    <button type="button" class="rc-btn rc-btn-ghost rc-btn-sm" 
                                            onclick="testTemplate({{.TemplateID}}, '{{.Name}}')" 
                                            title="Send Test Email">
                                        <i class="bi bi-send"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        {{end}}
                    </tbody>
                </table>
            </div>
            {{else}}
            <div class="rc-text-center" style="padding: var(--space-3xl);">
                <div style="font-size: 4rem; color: var(--text-muted); margin-bottom: var(--space-lg);">
                    <i class="bi bi-envelope-x"></i>
                </div>
                <h3 style="color: var(--text-secondary); margin-bottom: var(--space-md);">No Email Templates Found</h3>
                <p class="rc-text-sm">Create your first email template to send personalized emails.</p>
                <a href="/settings/email-templates/new" class="rc-btn rc-btn-primary">
                    <i class="bi bi-plus-circle"></i> Create First Template
                </a>
            </div>
            {{end}}
        </div>
    </div>
</div>

<!-- Test Email Modal -->
<div class="rc-modal" id="testEmailModal">
    <div class="rc-modal-overlay" onclick="closeModal('testEmailModal')"></div>
    <div class="rc-modal-content">
        <div class="rc-modal-header">
            <h3 class="rc-modal-title">Send Test Email</h3>
            <button type="button" class="rc-btn rc-btn-ghost rc-btn-sm" onclick="closeModal('testEmailModal')">
                <i class="bi bi-x"></i>
            </button>
        </div>
        <div class="rc-modal-body">
            <form id="testEmailForm">
                <div class="rc-form-group">
                    <label for="testEmailAddress" class="rc-label">Email Address</label>
                    <input type="email" class="rc-input" id="testEmailAddress" 
                           placeholder="test@example.com" required>
                    <small class="rc-text-muted">The test email will be sent to this address.</small>
                </div>
                <input type="hidden" id="testTemplateId">
            </form>
        </div>
        <div class="rc-modal-body">
            <div class="rc-flex rc-gap-md rc-justify-end rc-mt-lg">
                <button type="button" class="rc-btn rc-btn-outline" onclick="closeModal('testEmailModal')">Cancel</button>
                <button type="button" class="rc-btn rc-btn-primary" onclick="sendTestEmail()">
                    <i class="bi bi-send"></i> Send Test Email
                </button>
            </div>
        </div>
    </div>
</div>

<script>
// Load SMTP config on page load
document.addEventListener('DOMContentLoaded', function() {
    loadSMTPConfig();
});

function loadSMTPConfig() {
    fetch('/api/v1/settings/smtp')
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const config = data.config;
                document.getElementById('smtp_host').value = config.smtp_host || '';
                document.getElementById('smtp_port').value = config.smtp_port || '';
                document.getElementById('smtp_username').value = config.smtp_username || '';
                // Don't populate password for security
            }
        })
        .catch(error => console.error('Error loading SMTP config:', error));
}

function saveSMTPConfig() {
    const config = {
        smtp_host: document.getElementById('smtp_host').value,
        smtp_port: parseInt(document.getElementById('smtp_port').value),
        smtp_username: document.getElementById('smtp_username').value,
        smtp_password: document.getElementById('smtp_password').value
    };
    
    fetch('/api/v1/settings/smtp', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(config)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            RentalCore.showNotification('SMTP settings saved successfully!', 'success');
            document.getElementById('smtp_password').value = ''; // Clear password field
        } else {
            RentalCore.showNotification('Error: ' + (data.error || 'Unknown error'), 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        RentalCore.showNotification('Error saving SMTP settings', 'error');
    });
}

function testSMTPConnection() {
    const button = event.target;
    const originalText = button.innerHTML;
    button.innerHTML = '<i class="bi bi-hourglass-split"></i> Testing...';
    button.disabled = true;
    
    fetch('/api/v1/settings/smtp/test', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            RentalCore.showNotification('SMTP connection test successful!', 'success');
        } else {
            RentalCore.showNotification('SMTP connection failed: ' + (data.error || 'Unknown error'), 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        RentalCore.showNotification('Error testing SMTP connection', 'error');
    })
    .finally(() => {
        button.innerHTML = originalText;
        button.disabled = false;
    });
}

function setAsDefault(templateId, templateType) {
    if (confirm('Set this template as default for ' + templateType + '?')) {
        fetch('/settings/email-templates/' + templateId + '/set-default', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                templateType: templateType
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                RentalCore.showNotification('Default template set successfully!', 'success');
                window.location.reload();
            } else {
                RentalCore.showNotification('Error: ' + (data.error || 'Unknown error'), 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            RentalCore.showNotification('Error setting default template', 'error');
        });
    }
}

function deleteTemplate(templateId, templateName) {
    if (confirm('Really delete email template "' + templateName + '"?\n\nThis action cannot be undone.')) {
        fetch('/settings/email-templates/' + templateId, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json',
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                RentalCore.showNotification('Email template deleted successfully!', 'success');
                window.location.reload();
            } else {
                RentalCore.showNotification('Error: ' + (data.error || 'Unknown error'), 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            RentalCore.showNotification('Error deleting email template', 'error');
        });
    }
}

function testTemplate(templateId, templateName) {
    document.getElementById('testTemplateId').value = templateId;
    document.querySelector('#testEmailModal .rc-modal-title').textContent = 'Send Test Email: ' + templateName;
    showModal('testEmailModal');
}

function showModal(modalId) {
    document.getElementById(modalId).style.display = 'flex';
}

function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

function sendTestEmail() {
    const templateId = document.getElementById('testTemplateId').value;
    const emailAddress = document.getElementById('testEmailAddress').value;
    
    if (!emailAddress) {
        RentalCore.showNotification('Please enter an email address.', 'warning');
        return;
    }
    
    const button = event.target;
    const originalText = button.innerHTML;
    button.innerHTML = '<i class="bi bi-hourglass-split"></i> Sending...';
    button.disabled = true;
    
    fetch('/settings/email-templates/' + templateId + '/test', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            toEmail: emailAddress
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            RentalCore.showNotification('Test email sent successfully to ' + emailAddress + '!', 'success');
            closeModal('testEmailModal');
            document.getElementById('testEmailForm').reset();
        } else {
            RentalCore.showNotification('Error: ' + (data.error || 'Unknown error'), 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        RentalCore.showNotification('Error sending test email', 'error');
    })
    .finally(() => {
        button.innerHTML = originalText;
        button.disabled = false;
    });
}
</script>
{{end}}